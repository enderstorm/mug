#!/bin/bash

cwd=$(pwd)

repo="seges/"

function getJsonVal() { 
   if [ \( $# -ne 1 \) -o \( -t 0 \) ]; then
       echo "Usage: getJsonVal 'key' < /tmp/file";
       echo "   -- or -- ";
       echo " cat /tmp/input | getJsonVal 'key'";
       return;
   fi;
   python -c "import json,sys;sys.stdout.write(json.dumps(json.load(sys.stdin)$1))";
}

function getXmlVal() {
	python -c "import xml.etree.ElementTree as ET;tree = ET.parse('$cwd/pom.xml');root = tree.getroot();print tree.find('./{http://maven.apache.org/POM/4.0.0}artifactId').text"
}

function resolve_module
{
	if [ -f $cwd/package.json ]; then
		module="frontend-javascript"
		project_name=$(cat $cwd/package.json | getJsonVal "['name']" | sed -e 's/^"//'  -e 's/"$//')
	elif [ -f $cwd/build.sbt ]; then
		module="backend-scala"
		project_name=$(cat $cwd/build.sbt | grep "name" | sed 's/.*"\([^"]*\)"/\1/')
	elif [ -f $cwd/pom.xml ]; then
		module="backend-java"
		project_name=$(cat $cwd/pom.xml | getXmlVal )
	fi
}

while getopts "m:v:" opt; do
	case $opt in
		m)
			module=$OPTARG
			project_name=$(basename $cwd)
			;;
		v)
			version=":$OPTARG"
			;;
                \?)
			echo "help"
			exit 42
	esac
done

[ "$module" == "" ] && resolve_module


if [ "$module" == "" ]; then
	echo "I don't think $cwd contains any supported project"
	exit 42
fi


if [ "$module" == "frontend-javascript" ]; then
	ports="-p 3000:3000"
elif [ "$module" == "backend-scala" ]; then
	volumes="-v $HOME/.ivy2-mug:/home/developer/.ivy2"
elif [ "$module" == "backend-java" ]; then
	volumes="-v $HOME/.m2-mug:/home/developer/.m2"
fi

volumes="-v $cwd:/home/developer/$project_name $volumes"
echo "Running $project_name in $cwd as ${repo}mug-$module$version [ volumes = $volumes , ports = $ports]"

docker run $ports $volumes --rm -ti ${repo}mug-$module$version

